# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Calculator_project.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets 
from PyQt5.QtGui import QPalette, QColor
from PyQt5.QtWidgets import QApplication, QWidget, QMessageBox


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(302, 466)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(90, 360, 81, 61))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(10, 290, 81, 71))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(90, 290, 81, 71))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(170, 290, 81, 71))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(10, 220, 81, 71))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setGeometry(QtCore.QRect(90, 220, 81, 71))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_7.setGeometry(QtCore.QRect(170, 220, 81, 71))
        self.pushButton_7.setObjectName("pushButton_7")
        self.pushButton_8 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_8.setGeometry(QtCore.QRect(10, 150, 81, 71))
        self.pushButton_8.setObjectName("pushButton_8")
        self.pushButton_9 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_9.setGeometry(QtCore.QRect(90, 150, 81, 71))
        self.pushButton_9.setObjectName("pushButton_9")
        self.pushButton_10 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_10.setGeometry(QtCore.QRect(170, 150, 81, 71))
        self.pushButton_10.setObjectName("pushButton_10")
        self.pushButton_12 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_12.setGeometry(QtCore.QRect(250, 300, 51, 51))
        self.pushButton_12.setObjectName("pushButton_12")
        self.pushButton_13 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_13.setGeometry(QtCore.QRect(250, 350, 51, 71))
        self.pushButton_13.setObjectName("pushButton_13")
        self.pushButton_14 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_14.setGeometry(QtCore.QRect(250, 250, 51, 51))
        self.pushButton_14.setObjectName("pushButton_14")
        self.pushButton_15 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_15.setGeometry(QtCore.QRect(250, 200, 51, 51))
        self.pushButton_15.setObjectName("pushButton_15")
        self.pushButton_16 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_16.setGeometry(QtCore.QRect(250, 150, 51, 51))
        self.pushButton_16.setObjectName("pushButton_16")
        self.pushButton_11 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_11.setGeometry(QtCore.QRect(170, 360, 81, 61))
        self.pushButton_11.setObjectName("pushButton_11")
        self.pushButton_17 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_17.setGeometry(QtCore.QRect(10, 360, 81, 61))
        self.pushButton_17.setObjectName("pushButton_17")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 10, 271, 131))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(22)
        self.label.setFont(font)
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 302, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.connects()
        self.a = 0
        self.b = 0
        self.mode = 0
        self.cmode = 0


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "0"))
        self.pushButton_2.setText(_translate("MainWindow", "1"))
        self.pushButton_3.setText(_translate("MainWindow", "2"))
        self.pushButton_4.setText(_translate("MainWindow", "3"))
        self.pushButton_5.setText(_translate("MainWindow", "4"))
        self.pushButton_6.setText(_translate("MainWindow", "5"))
        self.pushButton_7.setText(_translate("MainWindow", "6"))
        self.pushButton_8.setText(_translate("MainWindow", "7"))
        self.pushButton_9.setText(_translate("MainWindow", "8"))
        self.pushButton_10.setText(_translate("MainWindow", "9"))
        self.pushButton_12.setText(_translate("MainWindow", "+"))
        self.pushButton_13.setText(_translate("MainWindow", "="))
        self.pushButton_14.setText(_translate("MainWindow", "-"))
        self.pushButton_15.setText(_translate("MainWindow", "x"))
        self.pushButton_16.setText(_translate("MainWindow", "/"))
        self.pushButton_11.setText(_translate("MainWindow", "Delete"))
        self.pushButton_17.setText(_translate("MainWindow", "C"))
        self.label.setText(_translate("MainWindow", "0"))
        self.label.setStyleSheet('color: white')
        self.pushButton.setStyleSheet('background-color: gray; color: white') # цвет кнопки 
        self.pushButton_2.setStyleSheet('background-color: gray; color: white') # цвет кнопки
        self.pushButton_3.setStyleSheet('background-color: gray; color: white') # цвет кнопки
        self.pushButton_4.setStyleSheet('background-color: gray; color: white') # цвет кнопки
        self.pushButton_5.setStyleSheet('background-color: gray; color: white') # цвет кнопки
        self.pushButton_6.setStyleSheet('background-color: gray; color: white') # цвет кнопки
        self.pushButton_7.setStyleSheet('background-color: gray; color: white') # цвет кнопки
        self.pushButton_8.setStyleSheet('background-color: gray; color: white') # цвет кнопки
        self.pushButton_10.setStyleSheet('background-color: gray; color: white') # цвет кнопки
        self.pushButton_11.setStyleSheet('background-color: gray; color: white') # цвет кнопки
        self.pushButton_12.setStyleSheet('background-color: lightgray') # цвет кнопки
        self.pushButton_13.setStyleSheet('background-color: lightgray') # цвет кнопкиv
        self.pushButton_14.setStyleSheet('background-color: lightgray') # цвет кнопки
        self.pushButton_16.setStyleSheet('background-color: lightgray') # цвет кнопки
        self.pushButton_15.setStyleSheet('background-color: lightgray') # цвет кнопки
        self.pushButton_17.setStyleSheet('background-color: gray; color: white') # цвет кнопки
        self.pushButton_9.setStyleSheet('background-color: gray; color: white') # цвет кнопки
        palette = MainWindow.palette()
        palette.setColor(QPalette.Window, QColor(33, 33, 33))  # цвет
        MainWindow.setPalette(palette)

    def checker0(self):
        if (self.label.text()) == '0':
            return True
        else:
            return False

    def clicknum(self,num):
        result = self.label.text() + num
        self.label.setText(result)

    def click1(self):
        print('Нажата кнопка 1')
        if self.checker0() or self.checker_mode():
            self.label.setText('1')
            self.mode = 0 
        else:
            self.clicknum('1')
    def click2(self):
        print('Нажата кнопка 2')
        if self.checker0() or self.checker_mode():
            self.label.setText('2')
            self.mode = 0 
        else:
            self.clicknum('2')
    def click3(self):
        print('Нажата кнопка 3')
        if self.checker0() or self.checker_mode():
            self.label.setText('3')
            self.mode = 0 
        else:
            self.clicknum('3')

    def click4(self):
        print('Нажата кнопка 4')
        if self.checker0() or self.checker_mode():
            self.label.setText('4')
            self.mode = 0
        else:
            self.clicknum('4')
    def click5(self):
        print('Нажата кнопка 5')
        if self.checker0() or self.checker_mode():
            self.label.setText('5')
            self.mode = 0 
        else:
            self.clicknum('5')
    def click6(self):
        print('Нажата кнопка 6')
        if self.checker0() or self.checker_mode():
            self.label.setText('6')
            self.mode = 0 
        else:
            self.clicknum('6')
    def click7(self):
        print('Нажата кнопка 7')
        if self.checker0() or self.checker_mode():
            self.label.setText('7')
            self.mode = 0 
        else:
            self.clicknum('7')
    def click8(self):
        print('Нажата кнопка 8')
        if self.checker0() or self.checker_mode():
            self.label.setText('8')
            self.mode = 0 
        else:
            self.clicknum('8')
    def click9(self):
        print('Нажата кнопка 9')
        if self.checker0() or self.checker_mode():
            self.label.setText('9')
            self.mode = 0 
        else:
            self.clicknum('9')

    def click0(self):
        print('Нажата кнопка 0')
        if self.checker0() or self.checker_mode():
            self.label.setText('0')
            self.mode = 0 
        else:
            self.clicknum('0')

    def clear(self):
        self.label.setText('0')
    def delete(self):
        s = self.label.text()
        if len(s) == 1:
            s_new = '0'
        else:
            s_new = s[:-1]
        self.label.setText(s_new)

    def plus(self):
        self.a = float(self.label.text())
        print('В переменную а поместили значение', self.label.text())
        # изменили режим на ожидание числа
        self.cmode = 1
        self.mode = 1

    def minus(self):
        self.a = float(self.label.text())
        print('В переменную а поместили значение', self.label.text())
        # изменили режим на ожидание числа
        self.cmode = 2
        self.mode = 1

    def multiply(self):
        self.a = float(self.label.text())
        print('В переменную а поместили значение', self.label.text())
        # изменили режим на ожидание числа
        self.cmode = 3
        self.mode = 1

    def divide(self):
        self.a = float(self.label.text())
        print('В переменную а поместили значение', self.label.text())
        # изменили режим на ожидание числа
        self.cmode = 4
        self.mode = 1


    def checker_mode(self):
        if self.mode == 1:
            return True
        else:
            return False
    def result(self):
        self.b = float(self.label.text())
        res = 0
        if self.cmode == 1:
            res = self.a + self.b
        elif self.cmode == 2:
            res = self.a - self.b
        elif self.cmode == 3:
            res = self.a * self.b
        elif self.cmode == 4:
            if self.b == 0:
                print('Деление на ноль невозможно')
                msg.show()
            else:
                res = self.a / self.b
        if len(str(res)) >= 17:
            res = round(res, 15)
        self.label.setText(str(res))
        self.cmode = 0
        if self.b != 0:
            print('Результат равен:', res)

    def connects(self):
        self.pushButton.clicked.connect(self.click0)
        self.pushButton_2.clicked.connect(self.click1)
        self.pushButton_3.clicked.connect(self.click2)
        self.pushButton_4.clicked.connect(self.click3)
        self.pushButton_5.clicked.connect(self.click4)
        self.pushButton_6.clicked.connect(self.click5)
        self.pushButton_7.clicked.connect(self.click6)
        self.pushButton_8.clicked.connect(self.click7)
        self.pushButton_9.clicked.connect(self.click8)
        self.pushButton_10.clicked.connect(self.click9)
        self.pushButton_17.clicked.connect(self.clear)
        self.pushButton_11.clicked.connect(self.delete)
        self.pushButton_12.clicked.connect(self.plus)
        self.pushButton_13.clicked.connect(self.result)
        self.pushButton_14.clicked.connect(self.minus)
        self.pushButton_15.clicked.connect(self.multiply)
        self.pushButton_16.clicked.connect(self.divide)
if __name__ == "__main__":
    import sys
    

    #Создаем приложениe
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    msg = QMessageBox()
    msg.setWindowTitle("Уведомление")
    msg.setText("Деление на ноль невозможно")
    msg.setIcon(QMessageBox.Warning)

    #Показать и не дать закрыться
    MainWindow.show()
    sys.exit(app.exec_())
